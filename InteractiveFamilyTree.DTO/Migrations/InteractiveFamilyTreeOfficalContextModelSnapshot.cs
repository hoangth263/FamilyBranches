// <auto-generated />
using System;
using InteractiveFamilyTree.DTO.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InteractiveFamilyTree.DTO.Migrations
{
    [DbContext(typeof(InteractiveFamilyTreeOfficalContext))]
    partial class InteractiveFamilyTreeOfficalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InteractiveFamilyTree.DTO.Models.Career", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("FamilyMemberId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("FamilyMemberID");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id")
                        .HasName("PK__Career__3214EC07D9EC15AA");

                    b.HasIndex("FamilyMemberId");

                    b.ToTable("Career", (string)null);
                });

            modelBuilder.Entity("InteractiveFamilyTree.DTO.Models.ChildAndParentsRelationShip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChildId")
                        .HasColumnType("int")
                        .HasColumnName("ChildID");

                    b.Property<int>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("ParentID");

                    b.HasKey("Id")
                        .HasName("PK__ChildAnd__3214EC07AD15E14A");

                    b.HasIndex("ChildId");

                    b.HasIndex("ParentId");

                    b.ToTable("ChildAndParentsRelationShip", (string)null);
                });

            modelBuilder.Entity("InteractiveFamilyTree.DTO.Models.CoupleRelationship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("HusbandId")
                        .HasColumnType("int")
                        .HasColumnName("HusbandID");

                    b.Property<string>("MarrageStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("WifeId")
                        .HasColumnType("int")
                        .HasColumnName("WifeID");

                    b.HasKey("Id")
                        .HasName("PK__CoupleRe__3214EC076A142B10");

                    b.HasIndex("HusbandId");

                    b.HasIndex("WifeId");

                    b.ToTable("CoupleRelationship", (string)null);
                });

            modelBuilder.Entity("InteractiveFamilyTree.DTO.Models.EventParticipant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("FamilyMemberId")
                        .HasColumnType("int")
                        .HasColumnName("FamilyMemberID");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__EventPar__3214EC07E45F10D0");

                    b.HasIndex("EventId");

                    b.HasIndex("FamilyMemberId");

                    b.ToTable("EventParticipant", (string)null);
                });

            modelBuilder.Entity("InteractiveFamilyTree.DTO.Models.FamilyEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("TreeId")
                        .HasColumnType("int");

                    b.Property<bool>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id")
                        .HasName("PK__FamilyEv__3214EC07ECA7CF6C");

                    b.HasIndex("TreeId");

                    b.ToTable("FamilyEvent", (string)null);
                });

            modelBuilder.Entity("InteractiveFamilyTree.DTO.Models.FamilyMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Gender")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("Generation")
                        .HasColumnType("int");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("MemberID");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('member')");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("StatusHealth")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("TreeId")
                        .HasColumnType("int")
                        .HasColumnName("TreeID");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__FamilyMe__3214EC27E2E307B1");

                    b.HasIndex("MemberId")
                        .IsUnique()
                        .HasFilter("[MemberID] IS NOT NULL");

                    b.HasIndex("TreeId");

                    b.ToTable("FamilyMember", (string)null);
                });

            modelBuilder.Entity("InteractiveFamilyTree.DTO.Models.FamilyTree", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ManagerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit");

                    b.Property<int>("TotalGeneration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id")
                        .HasName("PK__FamilyTr__3214EC07BEE43752");

                    b.HasIndex("ManagerId")
                        .IsUnique();

                    b.ToTable("FamilyTrees");
                });

            modelBuilder.Entity("InteractiveFamilyTree.DTO.Models.Member", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('1')");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id")
                        .HasName("PK__Members__3214EC07CF0AAB4E");

                    b.HasIndex(new[] { "Email" }, "UQ__Members__A9D105348AD26F24")
                        .IsUnique();

                    b.ToTable("Members");
                });

            modelBuilder.Entity("InteractiveFamilyTree.DTO.Models.Career", b =>
                {
                    b.HasOne("InteractiveFamilyTree.DTO.Models.FamilyMember", "FamilyMember")
                        .WithMany("Careers")
                        .HasForeignKey("FamilyMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Career__FamilyMe__3E52440B");

                    b.Navigation("FamilyMember");
                });

            modelBuilder.Entity("InteractiveFamilyTree.DTO.Models.ChildAndParentsRelationShip", b =>
                {
                    b.HasOne("InteractiveFamilyTree.DTO.Models.FamilyMember", "Child")
                        .WithMany("ChildAndParentsRelationShipChildren")
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ChildAndP__Child__37A5467C");

                    b.HasOne("InteractiveFamilyTree.DTO.Models.FamilyMember", "Parent")
                        .WithMany("ChildAndParentsRelationShipParents")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__ChildAndP__Paren__36B12243");

                    b.Navigation("Child");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("InteractiveFamilyTree.DTO.Models.CoupleRelationship", b =>
                {
                    b.HasOne("InteractiveFamilyTree.DTO.Models.FamilyMember", "Husband")
                        .WithMany("CoupleRelationshipHusbands")
                        .HasForeignKey("HusbandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__CoupleRel__Husba__3A81B327");

                    b.HasOne("InteractiveFamilyTree.DTO.Models.FamilyMember", "Wife")
                        .WithMany("CoupleRelationshipWives")
                        .HasForeignKey("WifeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__CoupleRel__WifeI__3B75D760");

                    b.Navigation("Husband");

                    b.Navigation("Wife");
                });

            modelBuilder.Entity("InteractiveFamilyTree.DTO.Models.EventParticipant", b =>
                {
                    b.HasOne("InteractiveFamilyTree.DTO.Models.FamilyEvent", "Event")
                        .WithMany("EventParticipants")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__EventPart__Event__46E78A0C");

                    b.HasOne("InteractiveFamilyTree.DTO.Models.FamilyMember", "FamilyMember")
                        .WithMany("EventParticipants")
                        .HasForeignKey("FamilyMemberId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__EventPart__Famil__47DBAE45");

                    b.Navigation("Event");

                    b.Navigation("FamilyMember");
                });

            modelBuilder.Entity("InteractiveFamilyTree.DTO.Models.FamilyEvent", b =>
                {
                    b.HasOne("InteractiveFamilyTree.DTO.Models.FamilyTree", "Tree")
                        .WithMany("FamilyEvents")
                        .HasForeignKey("TreeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__FamilyEve__TreeI__4222D4EF");

                    b.Navigation("Tree");
                });

            modelBuilder.Entity("InteractiveFamilyTree.DTO.Models.FamilyMember", b =>
                {
                    b.HasOne("InteractiveFamilyTree.DTO.Models.Member", "Member")
                        .WithOne()
                        .HasForeignKey("InteractiveFamilyTree.DTO.Models.FamilyMember", "MemberId")
                        .HasConstraintName("FK__FamilyMem__Membe__2F10007B");

                    b.HasOne("InteractiveFamilyTree.DTO.Models.FamilyTree", "Tree")
                        .WithMany("FamilyMembers")
                        .HasForeignKey("TreeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__FamilyMem__TreeI__2E1BDC42");

                    b.Navigation("Member");

                    b.Navigation("Tree");
                });

            modelBuilder.Entity("InteractiveFamilyTree.DTO.Models.FamilyTree", b =>
                {
                    b.HasOne("InteractiveFamilyTree.DTO.Models.Member", "Member")
                        .WithOne()
                        .HasForeignKey("InteractiveFamilyTree.DTO.Models.FamilyTree", "ManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__FamilyTre__Membe__2F10007B");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("InteractiveFamilyTree.DTO.Models.FamilyEvent", b =>
                {
                    b.Navigation("EventParticipants");
                });

            modelBuilder.Entity("InteractiveFamilyTree.DTO.Models.FamilyMember", b =>
                {
                    b.Navigation("Careers");

                    b.Navigation("ChildAndParentsRelationShipChildren");

                    b.Navigation("ChildAndParentsRelationShipParents");

                    b.Navigation("CoupleRelationshipHusbands");

                    b.Navigation("CoupleRelationshipWives");

                    b.Navigation("EventParticipants");
                });

            modelBuilder.Entity("InteractiveFamilyTree.DTO.Models.FamilyTree", b =>
                {
                    b.Navigation("FamilyEvents");

                    b.Navigation("FamilyMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
